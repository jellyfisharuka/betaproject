definitions:
  models.LoginSwagger:
    properties:
      password:
        description: Пароль пользователя
        type: string
      username:
        description: Уникальное имя пользователя
        type: string
    type: object
  models.Question:
    properties:
      max_length:
        type: integer
      question:
        type: string
    type: object
  models.SignupSwagger:
    properties:
      firstName:
        description: Имя пользователя
        type: string
      lastName:
        description: Фамилия пользователя
        type: string
      password:
        description: Пароль пользователя
        type: string
      roleID:
        description: ID роли пользователя
        type: integer
      telephone:
        description: Номер телефона пользователя
        type: string
      username:
        description: Уникальное имя пользователя
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server.
  title: Beta Project
  version: "1.0"
paths:
  /:
    get:
      description: Renders the index page
      produces:
      - text/html
      responses:
        "200":
          description: Index page
          schema:
            type: html
      summary: Index Page
      tags:
      - index
  /api/generate:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Generate content based on the given prompt
      parameters:
      - description: Prompt
        in: formData
        name: prompt
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Generated content
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: GenerateContent
      tags:
      - generate
  /api/generate/motivational_letter:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Generate a motivational letter based on user data
      parameters:
      - description: Name
        in: formData
        name: name
        required: true
        type: string
      - description: Age
        in: formData
        name: age
        required: true
        type: integer
      - description: University
        in: formData
        name: university
        required: true
        type: string
      - description: Country
        in: formData
        name: country
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Create Motivational Letter
      tags:
      - letters
  /api/generate/python:
    post:
      consumes:
      - application/json
      description: Generate content based on the given prompt
      parameters:
      - description: Question to get answer for
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/models.Question'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: GenerateContent
      tags:
      - generate
  /api/generate/recommendation_letter:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Generate a basic recommendation letter based on provided user data
      parameters:
      - description: Candidate's Name
        in: formData
        name: name
        required: true
        type: string
      - description: Relationship with Candidate
        in: formData
        name: relationship
        required: true
        type: string
      - description: Key Achievements of Candidate
        in: formData
        name: achievements
        required: true
        type: string
      - description: Key Qualities of Candidate
        in: formData
        name: qualities
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create Recommendation Letter
      tags:
      - letters
  /faq:
    get:
      consumes:
      - application/json
      description: Generate content based on the given prompt
      parameters:
      - description: Question to get answer for
        in: query
        name: question
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get FAQ Answer
      tags:
      - faq
  /googleLogin:
    get:
      description: Redirects the user to Google's OAuth2 login page to initiate authorization.
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to Google login
          schema:
            type: string
        "500":
          description: OAuth2 config is not initialized
          schema:
            type: string
      summary: Redirects to Google OAuth2 login
      tags:
      - Auth
  /login:
    post:
      consumes:
      - application/json
      description: Logs in an existing user
      parameters:
      - description: New user information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.LoginSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - Auth
  /signup:
    post:
      consumes:
      - application/json
      description: Signs up a new user
      parameters:
      - description: New user information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.SignupSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Sign up user
      tags:
      - Auth
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
